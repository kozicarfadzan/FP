// <auto-generated />
using System;
using FahrradladenPrinzenstrasse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FahrradladenPrinzenstrasse.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20201226191458_Notifikacija_RezervacijaId")]
    partial class Notifikacija_RezervacijaId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.AutorizacijskiToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Vrijednost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeEvidentiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("AutorizacijskiToken");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Bicikl", b =>
                {
                    b.Property<int>("BiciklId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("BojaId")
                        .HasColumnType("int");

                    b.Property<double?>("Cijena")
                        .HasColumnType("float");

                    b.Property<double?>("CijenaPoDanu")
                        .HasColumnType("float");

                    b.Property<short>("GodinaProizvodnje")
                        .HasColumnType("smallint");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<bool>("NoznaKocnica")
                        .HasColumnType("bit");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Stanje")
                        .HasColumnType("int");

                    b.Property<int>("StarosnaGrupaId")
                        .HasColumnType("int");

                    b.Property<int>("VelicinaOkviraId")
                        .HasColumnType("int");

                    b.HasKey("BiciklId");

                    b.HasIndex("BojaId");

                    b.HasIndex("ModelId");

                    b.HasIndex("StarosnaGrupaId");

                    b.HasIndex("VelicinaOkviraId");

                    b.ToTable("Bicikl");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.BiciklStanje", b =>
                {
                    b.Property<int>("BiciklStanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("BiciklId")
                        .HasColumnType("int");

                    b.Property<int?>("KupacId")
                        .HasColumnType("int");

                    b.Property<int>("LokacijaId")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BiciklStanjeId");

                    b.HasIndex("BiciklId");

                    b.HasIndex("KupacId");

                    b.HasIndex("LokacijaId");

                    b.ToTable("BiciklStanje");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Boja", b =>
                {
                    b.Property<int>("BojaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BojaId");

                    b.ToTable("Boja");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Dio", b =>
                {
                    b.Property<int>("DioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProizvodjacID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("DioId");

                    b.HasIndex("ProizvodjacID");

                    b.ToTable("Dio");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.DioStanje", b =>
                {
                    b.Property<int>("DioStanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<int>("DioId")
                        .HasColumnType("int");

                    b.Property<int?>("KupacId")
                        .HasColumnType("int");

                    b.Property<int>("LokacijaId")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DioStanjeId");

                    b.HasIndex("DioId");

                    b.HasIndex("KupacId");

                    b.HasIndex("LokacijaId");

                    b.ToTable("DioStanje");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Dobavljac", b =>
                {
                    b.Property<int>("DobavljacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DobavljacID");

                    b.ToTable("Dobavljac");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Grad", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradID");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Klijent");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresaStanovanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikID");

                    b.HasIndex("GradID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.KorpaStavka", b =>
                {
                    b.Property<int>("KorpaStavkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BiciklId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumServisiranja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DioId")
                        .HasColumnType("int");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("OpremaId")
                        .HasColumnType("int");

                    b.HasKey("KorpaStavkaId");

                    b.HasIndex("BiciklId");

                    b.HasIndex("DioId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("OpremaId");

                    b.ToTable("KorpaStavka");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Lokacija", b =>
                {
                    b.Property<int>("LokacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LokacijaId");

                    b.ToTable("Lokacija");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.MaterijalOkvira", b =>
                {
                    b.Property<int>("MaterijalOkviraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterijalOkviraId");

                    b.ToTable("MaterijalOkvira");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Brzina")
                        .HasColumnType("int");

                    b.Property<int>("MaterijalOkviraId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProizvodjacId")
                        .HasColumnType("int");

                    b.Property<int>("SpolBicikl")
                        .HasColumnType("int");

                    b.Property<int>("Suspenzija")
                        .HasColumnType("int");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("ModelId");

                    b.HasIndex("MaterijalOkviraId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Modeli");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.NacinOtpreme", b =>
                {
                    b.Property<int>("NacinOtpremeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NacinOtpremeId");

                    b.ToTable("NacinOtpreme");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Notifikacija", b =>
                {
                    b.Property<int>("NotifikacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProcitano")
                        .HasColumnType("bit");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int?>("RezervacijaIznajmljenaBiciklaId")
                        .HasColumnType("int");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.Property<int>("ZaposlenikId")
                        .HasColumnType("int");

                    b.HasKey("NotifikacijaId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("RezervacijaIznajmljenaBiciklaId");

                    b.HasIndex("ZaposlenikId");

                    b.ToTable("Notifikacija");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.OcjenaProizvoda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BiciklId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumOcjene")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DioId")
                        .HasColumnType("int");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int?>("OpremaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BiciklId");

                    b.HasIndex("DioId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("OpremaId");

                    b.ToTable("OcjenaProizvoda");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Oprema", b =>
                {
                    b.Property<int>("OpremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProizvodjacID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("OpremaId");

                    b.HasIndex("ProizvodjacID");

                    b.ToTable("Oprema");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.OpremaStanje", b =>
                {
                    b.Property<int>("OpremaStanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<int?>("KupacId")
                        .HasColumnType("int");

                    b.Property<int>("LokacijaId")
                        .HasColumnType("int");

                    b.Property<int>("OpremaId")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OpremaStanjeId");

                    b.HasIndex("KupacId");

                    b.HasIndex("LokacijaId");

                    b.HasIndex("OpremaId");

                    b.ToTable("OpremaStanje");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Proizvodjac", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProizvodjacId");

                    b.ToTable("Proizvodjac");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RadnoVrijeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DanUSedmici")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Kraj")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Pocetak")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("RadnoVrijeme");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresaStanovanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumUplate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Država")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("NacinOtpremeId")
                        .HasColumnType("int");

                    b.Property<string>("NacinPlacanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Osnovica")
                        .HasColumnType("float");

                    b.Property<string>("Pokrajina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiKod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Postarina")
                        .HasColumnType("float");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StanjeRezervacije")
                        .HasColumnType("int");

                    b.Property<double>("UkupniIznos")
                        .HasColumnType("float");

                    b.Property<double>("UkupnoPoreza")
                        .HasColumnType("float");

                    b.Property<double>("UkupnoProizvodi")
                        .HasColumnType("float");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("NacinOtpremeId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaIznajmljenaBicikla", b =>
                {
                    b.Property<int>("RezervacijaIznajmljenaBiciklaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BiciklStanjeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPreuzimanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumVracanja")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsZavrseno")
                        .HasColumnType("bit");

                    b.Property<bool>("Isteklo")
                        .HasColumnType("bit");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaIznajmljenaBiciklaID");

                    b.HasIndex("BiciklStanjeId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("RezervacijaIznajmljenaBicikla");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaProdajaBicikla", b =>
                {
                    b.Property<int>("RezervacijaProdajaBiciklaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BiciklStanjeId")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaProdajaBiciklaID");

                    b.HasIndex("BiciklStanjeId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("RezervacijaProdajaBicikla");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaProdajaDio", b =>
                {
                    b.Property<int>("RezervacijaProdajaDioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DioStanjeId")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaProdajaDioId");

                    b.HasIndex("DioStanjeId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("RezervacijaProdajaDio");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaProdajaOprema", b =>
                {
                    b.Property<int>("RezervacijaProdajaOpremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OpremaStanjeId")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaProdajaOpremaId");

                    b.HasIndex("OpremaStanjeId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("RezervacijaProdajaOprema");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaServis", b =>
                {
                    b.Property<int>("RezervacijaServisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Boja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumServisiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("DodatniTroskovi")
                        .HasColumnType("int");

                    b.Property<bool>("IsOdobreno")
                        .HasColumnType("bit");

                    b.Property<bool>("IsZavrseno")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proizvodjac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("ServisId")
                        .HasColumnType("int");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaServisId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("ServisId");

                    b.ToTable("RezervacijaServis");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Servis", b =>
                {
                    b.Property<int>("ServisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Trajanje")
                        .HasColumnType("float");

                    b.HasKey("ServisId");

                    b.ToTable("Servis");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.StarosnaGrupa", b =>
                {
                    b.Property<int>("StarosnaGrupaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StarosnaGrupaId");

                    b.ToTable("StarosnaGrupa");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.TerminStavka", b =>
                {
                    b.Property<int>("TerminStavkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BiciklId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPreuzimanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumVracanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.HasKey("TerminStavkaId");

                    b.HasIndex("BiciklId");

                    b.HasIndex("KlijentId");

                    b.ToTable("TerminStavka");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.VelicinaOkvira", b =>
                {
                    b.Property<int>("VelicinaOkviraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VelicinaOkviraId");

                    b.ToTable("VelicinaOkvira");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Zaposlenik", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Zaposlenik");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Administrator", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", "Korisnik")
                        .WithOne("Administrator")
                        .HasForeignKey("FahrradladenPrinzenstrasse.Data.EntityModels.Administrator", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.AutorizacijskiToken", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Bicikl", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Boja", "Boja")
                        .WithMany()
                        .HasForeignKey("BojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.StarosnaGrupa", "StarosnaGrupa")
                        .WithMany()
                        .HasForeignKey("StarosnaGrupaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.VelicinaOkvira", "VelicinaOkvira")
                        .WithMany()
                        .HasForeignKey("VelicinaOkviraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.BiciklStanje", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Bicikl", "Bicikl")
                        .WithMany("BiciklStanje")
                        .HasForeignKey("BiciklId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Lokacija", "Lokacija")
                        .WithMany()
                        .HasForeignKey("LokacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Dio", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Proizvodjac", "Proizvodjac")
                        .WithMany()
                        .HasForeignKey("ProizvodjacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.DioStanje", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Dio", "Dio")
                        .WithMany("DioStanje")
                        .HasForeignKey("DioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Lokacija", "Lokacija")
                        .WithMany()
                        .HasForeignKey("LokacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", "Korisnik")
                        .WithOne("Klijent")
                        .HasForeignKey("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.KorpaStavka", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Bicikl", "Bicikl")
                        .WithMany()
                        .HasForeignKey("BiciklId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Dio", "Dio")
                        .WithMany()
                        .HasForeignKey("DioId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", "Klijent")
                        .WithMany("KorpaStavke")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Oprema", "Oprema")
                        .WithMany()
                        .HasForeignKey("OpremaId");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Model", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.MaterijalOkvira", "MaterijalOkvira")
                        .WithMany()
                        .HasForeignKey("MaterijalOkviraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Proizvodjac", "Proizvodjac")
                        .WithMany()
                        .HasForeignKey("ProizvodjacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Notifikacija", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Rezervacija", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaIznajmljenaBicikla", "RezervacijaIznajmljenaBicikla")
                        .WithMany()
                        .HasForeignKey("RezervacijaIznajmljenaBiciklaId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Zaposlenik", "Zaposlenik")
                        .WithMany()
                        .HasForeignKey("ZaposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.OcjenaProizvoda", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Bicikl", "Bicikl")
                        .WithMany("OcjenaProizvoda")
                        .HasForeignKey("BiciklId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Dio", "Dio")
                        .WithMany("OcjenaProizvoda")
                        .HasForeignKey("DioId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Oprema", "Oprema")
                        .WithMany("OcjenaProizvoda")
                        .HasForeignKey("OpremaId");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Oprema", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Proizvodjac", "Proizvodjac")
                        .WithMany()
                        .HasForeignKey("ProizvodjacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.OpremaStanje", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId");

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Lokacija", "Lokacija")
                        .WithMany()
                        .HasForeignKey("LokacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Oprema", "Oprema")
                        .WithMany("OpremaStanje")
                        .HasForeignKey("OpremaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Rezervacija", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.NacinOtpreme", "NacinOtpreme")
                        .WithMany()
                        .HasForeignKey("NacinOtpremeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaIznajmljenaBicikla", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.BiciklStanje", "BiciklStanje")
                        .WithMany("RezervacijaIznajmljenaBicikla")
                        .HasForeignKey("BiciklStanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaIznajmljenaBicikla")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaProdajaBicikla", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.BiciklStanje", "BiciklStanje")
                        .WithMany("RezervacijaProdajaBicikla")
                        .HasForeignKey("BiciklStanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaProdajaBicikla")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaProdajaDio", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.DioStanje", "DioStanje")
                        .WithMany("RezervacijaProdajaDio")
                        .HasForeignKey("DioStanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaProdajaDio")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaProdajaOprema", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.OpremaStanje", "OpremaStanje")
                        .WithMany("RezervacijaProdajaOprema")
                        .HasForeignKey("OpremaStanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaProdajaOprema")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.RezervacijaServis", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaServis")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Servis", "Servis")
                        .WithMany()
                        .HasForeignKey("ServisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.TerminStavka", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Bicikl", "Bicikl")
                        .WithMany()
                        .HasForeignKey("BiciklId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Zaposlenik", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", "Korisnik")
                        .WithOne("Zaposlenik")
                        .HasForeignKey("FahrradladenPrinzenstrasse.Data.EntityModels.Zaposlenik", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
