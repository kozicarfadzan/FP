// <auto-generated />
using FahrradladenPrinzenstrasse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FahrradladenPrinzenstrasse.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20191128124201_izmjena")]
    partial class izmjena
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Administrator", b =>
                {
                    b.Property<int>("AdministratorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikID");

                    b.HasKey("AdministratorID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Grad", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("GradID");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresaStanovanja");

                    b.Property<bool>("Aktivan");

                    b.Property<string>("BrojTelefona");

                    b.Property<string>("Email");

                    b.Property<int>("GradID");

                    b.Property<string>("Ime");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("LozinkaHash");

                    b.Property<string>("LozinkaSalt");

                    b.Property<string>("Prezime");

                    b.Property<string>("Spol");

                    b.HasKey("KorisnikID");

                    b.HasIndex("GradID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Zaposlenik", b =>
                {
                    b.Property<int>("ZaposlenikID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikID");

                    b.HasKey("ZaposlenikID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Zaposlenik");
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Administrator", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FahrradladenPrinzenstrasse.Data.EntityModels.Zaposlenik", b =>
                {
                    b.HasOne("FahrradladenPrinzenstrasse.Data.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
